"""initial

Revision ID: 204f20a94dbc
Revises: 
Create Date: 2024-12-20 17:21:53.239047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '204f20a94dbc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_on_leave', sa.Boolean(), nullable=True),
    sa.Column('leave_balance', sa.Integer(), nullable=True),
    sa.Column('total_hours_worked', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('SCHEDULE_CHANGE', 'SHIFT_TRADE', 'ANNOUNCEMENT', 'LEAVE_REQUEST', 'SYSTEM', name='notificationtype'), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('priority', sa.Enum('HIGH', 'NORMAL', 'LOW', name='notificationpriority'), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'FAILED', 'READ', name='notificationstatus'), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('next_retry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('shift_type', sa.Enum('MORNING', 'AFTERNOON', 'EVENING', name='shifttype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='schedulestatus'), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_repeating', sa.Boolean(), nullable=True),
    sa.Column('repeat_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', name='repeatfrequency'), nullable=True),
    sa.Column('repeat_interval', sa.Integer(), nullable=True),
    sa.Column('repeat_days', sa.String(), nullable=True, comment='Comma-separated days for weekly repeat (0-6)'),
    sa.Column('repeat_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_schedule_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parent_schedule_id'], ['schedules.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_index(op.f('ix_schedules_start_time'), 'schedules', ['start_time'], unique=False)
    op.create_index(op.f('ix_schedules_user_id'), 'schedules', ['user_id'], unique=False)
    op.create_table('announcement_reads',
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('announcement_id', 'user_id')
    )
    op.create_table('shift_trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('TRADE', 'GIVEAWAY', name='tradetype'), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('original_shift_id', sa.Integer(), nullable=False),
    sa.Column('preferred_shift_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'COMPLETED', 'CANCELLED', name='tradestatus'), nullable=True),
    sa.Column('urgency', sa.Enum('HIGH', 'NORMAL', name='urgencylevel'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['original_shift_id'], ['schedules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['preferred_shift_id'], ['schedules.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shift_trades_id'), 'shift_trades', ['id'], unique=False)
    op.create_table('shift_trade_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trade_request_id', sa.Integer(), nullable=True),
    sa.Column('respondent_id', sa.Integer(), nullable=True),
    sa.Column('offered_shift_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('ACCEPTED', 'REJECTED', 'PENDING', name='responsestatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['offered_shift_id'], ['schedules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['respondent_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trade_request_id'], ['shift_trades.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shift_trade_responses')
    op.drop_index(op.f('ix_shift_trades_id'), table_name='shift_trades')
    op.drop_table('shift_trades')
    op.drop_table('announcement_reads')
    op.drop_index(op.f('ix_schedules_user_id'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_start_time'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
