"""notification model ws

Revision ID: a9d58b7e3a87
Revises: 85f508518ba4
Create Date: 2024-12-14 15:38:46.043460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a9d58b7e3a87'
down_revision: Union[str, None] = '85f508518ba4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification_preferences')
    op.drop_index('ix_notification_templates_event_type', table_name='notification_templates')
    op.drop_table('notification_templates')
    op.alter_column('notifications', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('notifications', 'type',
               existing_type=postgresql.ENUM('SCHEDULE', 'ANNOUNCEMENT', 'REQUEST', name='notificationtype'),
               nullable=True)
    op.alter_column('notifications', 'read_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('notifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_notifications_id', table_name='notifications')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.alter_column('notifications', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('notifications', 'read_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('notifications', 'type',
               existing_type=postgresql.ENUM('SCHEDULE', 'ANNOUNCEMENT', 'REQUEST', name='notificationtype'),
               nullable=False)
    op.alter_column('notifications', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('notification_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title_template', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message_template', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('priority', postgresql.ENUM('HIGH', 'NORMAL', 'LOW', name='notificationpriority'), server_default=sa.text("'NORMAL'::notificationpriority"), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='notification_templates_pkey')
    )
    op.create_index('ix_notification_templates_event_type', 'notification_templates', ['event_type'], unique=False)
    op.create_table('notification_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notification_type', postgresql.ENUM('SCHEDULE', 'ANNOUNCEMENT', 'REQUEST', name='notificationtype'), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notification_preferences_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notification_preferences_pkey')
    )
    # ### end Alembic commands ###
